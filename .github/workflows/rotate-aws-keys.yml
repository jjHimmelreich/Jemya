name: 🔄 AWS Key Rotation

on:
  schedule:
    # Run every 90 days at 2 AM UTC
    - cron: '0 2 */90 * *'
  workflow_dispatch: # Manual trigger
    inputs:
      force_rotation:
        description: 'Force key rotation'
        required: false
        default: 'false'

env:
  DEPLOYMENT_USER: jemya-github-actions

jobs:
  rotate-keys:
    name: 🔑 Rotate AWS Keys
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Configure AWS credentials (old keys)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: 🔑 Create new access key
      id: new-key
      run: |
        # Create new access key
        NEW_KEY_OUTPUT=$(aws iam create-access-key \
          --user-name $DEPLOYMENT_USER \
          --output json)
        
        NEW_ACCESS_KEY=$(echo $NEW_KEY_OUTPUT | jq -r '.AccessKey.AccessKeyId')
        NEW_SECRET_KEY=$(echo $NEW_KEY_OUTPUT | jq -r '.AccessKey.SecretAccessKey')
        
        echo "new-access-key=$NEW_ACCESS_KEY" >> $GITHUB_OUTPUT
        echo "::add-mask::$NEW_SECRET_KEY"
        echo "new-secret-key=$NEW_SECRET_KEY" >> $GITHUB_OUTPUT

    - name: 🧪 Test new credentials
      run: |
        # Test new credentials work
        AWS_ACCESS_KEY_ID="${{ steps.new-key.outputs.new-access-key }}" \
        AWS_SECRET_ACCESS_KEY="${{ steps.new-key.outputs.new-secret-key }}" \
        aws sts get-caller-identity

    - name: 🔄 Update GitHub secrets
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Update repository secrets with new keys
        echo "${{ steps.new-key.outputs.new-secret-key }}" | \
        gh secret set AWS_SECRET_ACCESS_KEY --body-file -
        
        echo "${{ steps.new-key.outputs.new-access-key }}" | \
        gh secret set AWS_ACCESS_KEY_ID --body-file -

    - name: ⏱️ Wait for secret propagation
      run: sleep 30

    - name: 🗑️ Delete old access key
      run: |
        # Delete the old access key
        aws iam delete-access-key \
          --user-name $DEPLOYMENT_USER \
          --access-key-id ${{ secrets.AWS_ACCESS_KEY_ID }}

    - name: 📊 Rotation summary
      run: |
        echo "## 🔄 AWS Key Rotation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Status**: Successfully rotated AWS access keys" >> $GITHUB_STEP_SUMMARY
        echo "📅 **Date**: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "👤 **User**: $DEPLOYMENT_USER" >> $GITHUB_STEP_SUMMARY
        echo "🔑 **New Key ID**: ${{ steps.new-key.outputs.new-access-key }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "⏰ **Next rotation**: $(date -u -d '+90 days')" >> $GITHUB_STEP_SUMMARY

    - name: 📧 Send notification (optional)
      if: always()
      run: |
        # You can add Slack/Teams/Email notification here
        echo "Key rotation completed for user: $DEPLOYMENT_USER"